apiVersion: v1
kind: ConfigMap
metadata:
  name: observatorium-otelcol-service-ca
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: observatorium-otelcol
data:
  config.yaml: |
    extensions:
      health_check:

    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: localhost:4317
            auth:
              oidc:
                issuer_url: https://dex.dex.svc.cluster.local:5556/dex
                audience: test
                issuer_ca_path: /etc/pki/ca-trust/source/anchors/service-ca.crt
                username_claim: email

    processors:
      # this processor will read an env var named OTEL_RESOURCE (key=value,key2=value2) and add each key-value pair as a resource attribute
      resourcedetection:
        detectors:
          - env

      # this routing table will always route spans to the 'jaeger' exporter
      routing:
        default_exporters:
        - jaeger
        from_attribute: X-Tenant
        table:
        - value: test
          exporters:
          - jaeger

    exporters:
      jaeger:
        endpoint: localhost:14250
        insecure: true

    service:
      extensions: [health_check]
      pipelines:
        traces:
          receivers:
            - otlp
          processors:
            - resourcedetection
            - routing
          exporters:
            - jaeger

---
apiVersion: v1
kind: Service
metadata:
  name: observatorium-otelcol
  labels:
    app: observatorium-otelcol
spec:
  ports:
  - port: 4317
    targetPort: 4317
  selector:
    app: observatorium-otelcol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: observatorium-otelcol
spec:
  replicas: 1
  selector:
    matchLabels:
      app: observatorium-otelcol
  template:
    metadata:
      labels:
        app: observatorium-otelcol
    spec:
      containers:
      - name: otelcol
        image: quay.io/observatorium/opentelemetry-collector:v0.22.0
        args: ["--config=/etc/otelcol/config.yaml"]
        resources:
          limits:
            cpu: 1500m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 256Mi
        ports:
        - containerPort: 4317
        volumeMounts:
        - name: otelcol-config
          mountPath: /etc/otelcol
          readOnly: true
        - name: service-ca
          mountPath: /etc/pki/ca-trust/source/anchors/service-ca.crt
          subPath: service-ca.crt
          readOnly: true
      volumes:
        - name: otelcol-config
          configMap:
            name: observatorium-otelcol
        - name: service-ca
          configMap:
            name: observatorium-otelcol-service-ca
